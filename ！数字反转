给定一个数，请将该数各个位上数字反转得到一个新数。
这次与NOIp2011普及组第一题不同的是：这个数可以是小数，分数，百分数，整数。
整数反转是将所有数位对调。
小数反转是把整数部分的数反转，再将小数部分的数反转，不交换整数部分与小数部分。
分数反转是把分母的数反转，再把分子的数反转，不交换分子与分母。
百分数的分子一定是整数，百分数只改变数字部分。

输入格式  一个数 ss

输出格式  一个数，即 ss 的反转数
//一定要多考虑特殊情况
//我的丑陋的AC代码
#include<iostream>
#include<cstdio>
#include<string>

using namespace std;

string s;

int main() {
	getline(cin,s);
	string::size_type pos1=s.find(".");
	string::size_type pos2=s.find("/");
	if(pos1!=string::npos||pos2!=string::npos) {
		int p;
		if(pos1!=string::npos) 
			p=pos1;
		else p=pos2;
		char sq[15],sh[25],f=s[p];
		s.copy(sq+1,p,0);
		s.copy(sh+1,s.size()-1-p,p+1);
		int i=p;
		while(sq[i]=='0') i--;
		for(i;i>=1;i--) {
			cout<<sq[i];
		}
		if(s[0]=='0') cout<<0;
		cout<<f;
		if(s[p]=='.') {
			i=1;
			while(sh[i]=='0') i++;
			for(int j=s.size()-1-p;j>=i;j--) cout<<sh[j];
		if(sh[s.size()-1-p]=='0') cout<<'0';
		}
		else {
			i=s.size()-1-p;
			while(sh[i]=='0') i--;
			for(i;i>=1;i--) cout<<sh[i];
		}
	}
	else if(s[s.size()-1]=='%') {
		if(s[0]=='0') cout<<0;
		int i=s.size()-2;
		while(s[i]=='0')  i--;
		for(i;i>=0;i--) cout<<s[i];
		cout<<'%';
	}
	else{
		int i=s.size()-1;
		while(s[i]=='0') i--;
		for(i;i>=0;i--) cout<<s[i];
		if(s[0]=='0') cout<<'0';
	}
	//cout<<endl;
	return 0;
}
