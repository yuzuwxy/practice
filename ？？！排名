今天的上机考试虽然有实时的Ranklist，但上面的排名只是根据完成的题数排序，没有考虑每题的分值，所以并不是最后的排名。给定录取分数线，请你写程序找出最后通过分数线的考生，并将他们的成绩按降序
打印。
Input
测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N ( 0 < N< 1000 )、考题数M ( 0 < M < = 10 )、分数线（正整数）G；第2行排序给出第1题至第M题的正整数分值；以下N行，每行给出一
名考生的准考证号（长度不超过20的字符串）、该生解决的题目总数m、以及这m道题的题号（题目号由1到M）。
当读入的考生人数为0时，输入结束，该场考试不予处理。
Output
对每场考试，首先在第1行输出不低于分数线的考生人数n，随后n行按分数从高到低输出上线考生的考号与分数，其间用1空格分隔。若有多名考生分数相同，则按他们考号的升序输出。
Sample Input
4 5 25
10 10 12 13 15
CS004 3 5 1 3
CS003 5 2 4 1 3 5
CS002 2 1 2
CS001 3 2 3 5
1 2 40
10 30
CS001 1 2
2 3 20
10 10 10
CS000000000000000001 0
CS000000000000000002 2 1 2
0

Sample Output
3
CS003 60
CS001 37
CS004 37
0
1
CS000000000000000002 20



#include<bits/stdc++.h> 

using namespace std;

struct node {
	char st[25];
	int num;
	int tot;
} a[1010];

int n,m,g;

bool compare(node a,node b) {
	//if(x.tot=!y.tot) return x.tot>y.tot;
	//return x.st<y.st;
    if(a.tot!=b.tot) return a.tot>b.tot;
    return (strcmp(a.st>b.st)>0)?0:1;   //不知道为什么一直这里报错
}

int main() {
	while(scanf("%d",&n),n) {
		//if(!n) break;
		scanf("%d%d",&m,&g);
		int nlev=0;
		int sc[15];
		for(int i=1;i<=m;i++) {
			scanf("%d",&sc[i]);
		}
		//cout<<sc[1]<<endl;
		for(int i=1;i<=n;i++) {
			scanf("%s",&a[i].st);
			scanf("%d",&a[i].num);
			a[i].tot=0;
			for(int j=1;j<=a[i].num;j++) {
				int cnt;	
				scanf("%d",&cnt);
				a[i].tot+=sc[cnt];
			}
			//cout<<a[i].tot<<endl;
			if(a[i].tot>=g) nlev++;
		}
		printf("%d\n",nlev);
		sort(a+1,a+n+1,compare);
		for(int i=1;i<=n;i++) {
			if(a[i].tot<g) break;
			printf("%s %d\n",a[i].st,a[i].tot);
		}
	}
	return 0;
}

//稍加修改之后的AC代码，尽管没看出来跟之前有什么明显的不一样
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring> 

using namespace std;

struct node {
	char st[25];
	int num;
	int tot;
} a[1010];

int n,m,g;

bool compare(node a,node b) {
	//if(x.tot=!y.tot) return x.tot>y.tot;
	//return x.st<y.st;
    if(a.tot!=b.tot) return a.tot>b.tot;
    return strcmp(a.st,b.st)>0?0:1;    //就是这里，加了个括号而已
}

int main() {
	while(scanf("%d",&n),n) {
		//if(!n) break;
		scanf("%d%d",&m,&g);
		int nlev=0;
		int sc[15];
		for(int i=1;i<=m;i++) {
			scanf("%d",&sc[i]);
		}
		//cout<<sc[1]<<endl;
		for(int i=1;i<=n;i++) {
			scanf("%s",&a[i].st);
			scanf("%d",&a[i].num);
			a[i].tot=0;
			for(int j=1;j<=a[i].num;j++) {
				int cnt;	
				scanf("%d",&cnt);
				a[i].tot+=sc[cnt];
			}
			//cout<<a[i].tot<<endl;
			if(a[i].tot>=g) nlev++;
		}
		printf("%d\n",nlev);
		sort(a+1,a+n+1,compare);
		for(int i=1;i<=n;i++) {
			if(a[i].tot<g) break;
			printf("%s %d\n",a[i].st,a[i].tot);
		}
	}
	return 0;
}

//过了，注意字符串比较函数的应用。
//C++里的函数是C里来的，C没有string 类型，全都是char[20]来充当字符串

//网上的标答，要更简洁一点
#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<string.h>
using namespace std;
struct Node{
    char name[25];
    int score;
}node[1005];
bool cmp(Node a,Node b){
    if(a.score!=b.score) return a.score>b.score;
    return strcmp(a.name,b.name)>0?0:1;
}
int main()
{   
    int n,m,g,i;
    int s[15];
    int x,p;
    while(scanf("%d",&n),n)
    {
        scanf("%d%d",&m,&g);
        for(i=0;i<m;i++)
           scanf("%d",&s[i]);
        for(i=0;i<n;i++)
        {
            scanf("%s",&node[i].name);
            scanf("%d",&p);
            node[i].score=0;
            while(p--)
            {
                scanf("%d",&x);
                node[i].score+=s[x-1];
            }
        } 
        sort(node,node+n,cmp);
        int cnt=0;
        for(i=0;i<n;i++)
        {
            if(node[i].score<g) break;
            cnt++;
        }
        printf("%d\n",cnt);
        for(i=0;i<cnt;i++)
          printf("%s %d\n",node[i].name,node[i].score);
    }        
	return 0;
}
